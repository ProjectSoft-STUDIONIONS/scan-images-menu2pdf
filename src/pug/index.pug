doctype html
html(lang="ru" prefix="og: http://ogp.me/ns#")
	head
		meta(http-equiv="Content-Type" content="text/html; charset=UTF-8")
		meta(http-equiv="X-UA-Compatible" content="IE=EmulateIE9")
		meta(name="viewport" content="width=device-width, initial-scale=1")
		meta(name="SKYPE_TOOLBAR" content="SKYPE_TOOLBAR_PARSER_COMPATIBLE")
		meta(charset="utf-8")
		meta(name="yandex-verification" content="ad6b0f0f478e9f72")
		title= title
		link(rel="shortcut icon" type="image/x-icon" href="https://" + repo + "/" + page + "/favicon.ico")
		link(rel="icon" type="image/png" href="https://" + repo + "/" + page + "/favicon.png")
		meta(name="title" content=title)
		meta(name="longtitle" content=title)
		meta(name="keywords" content=keywords)
		meta(name="description" content=description)
		meta(name="site_name" content=title)
		meta(itemprop="image" content="https://" + repo + "/" + page + "/images/" + open_graph.image_16x9)
		meta(name="short_link" content="https://" + repo + "/" + page + "/")
		meta(property="og:title" content=title)
		meta(property="og:description" content=description)
		meta(property="og:url" content="https://" + repo + "/" + page + "/")
		meta(property="og:locale" content="ru_RU")
		meta(property="og:type" content="website")
		meta(property="og:site_name" content=title)
		meta(property="og:image" content="https://" + repo + "/" + page + "/images/" + open_graph.image_16x9)
		meta(property="og:image:width" content=open_graph.image_16x9_width)
		meta(property="og:image:height" content=open_graph.image_16x9_height)
		meta(property="og:image:type" content="image/jpeg")
		meta(property="og:image" content="https://" + repo + "/" + page + "/images/" + open_graph.image_1x1)
		meta(property="og:image:width" content=open_graph.image_1x1_width)
		meta(property="og:image:height" content=open_graph.image_1x1_width)
		meta(property="og:image:type" content="image/jpeg")
		link(type="text/css" rel="stylesheet" href="https://" + repo + "/css/plugins.css?hash=" + hash)
		link(type="text/css" rel="stylesheet" href="https://" + repo + "/" + page + "/css/main.css?hash=" + hash)
	body
		header
			.wrapper
				.github-icons
					a(href="https://" + repo + "/")
						img(src="https://" + repo + "/images/" + logotype alt=nickname + " GitHub")
		main
			.wrapper
				.github-icons
					a(href="https://github.com/" + userName + "/" + page + "/releases/latest" target="_blank")
						img(src="https://img.shields.io/github/v/release/" + userName + "/" + page + "?style=for-the-badge&color=%23007ec6&label=РЕАЛИЗ" alt="Github Latest radioApp-lite")
					a(href="https://github.com/" + userName + "/" + page + "/blob/master/LICENSE" target="_blank")
						img(src="https://img.shields.io/github/license/" + userName + "/" + page + "?style=for-the-badge&color=%2397ca00&label=ЛИЦЕНЗИЯ" alt="Github LICENSE radioApp-lite")
					a(href="https://github.com/" + userName + "/" + page + "/" target="_blank")
						img(src="https://img.shields.io/github/repo-size/" + userName + "/" + page + "?style=for-the-badge&color=%23007ec6&label=РАЗМЕР РЕПОЗИТОРИЯ" alt="Github Repo")
					a(href="https://github.com/" + userName + "/" + page + "/releases/latest/download/" + download download=download target="_blank")
						img(src="https://img.shields.io/github/downloads/" + userName + "/" + page + "/total?style=for-the-badge&color=%2397ca00&label=СКАЧАТЬ" alt="Download " + download)
				h1= h1title
				p В работе очень часто приходится конвертировать отсканированные изображения в PDF файлы и этот процесс довольно трудоёмкий, а приходится делать это два - три раза в неделю. Можно использовать различные программы для создания PDF файлов, оптимизации этих файлов и т. д. Но главное - я считаю, что заполнение метатегами PDF файлов крайне необходимо. Это необходимо ни только в плане SEO оптимизации, но и в плане удобства просмотра файлов в браузере. Посетитель открывает ваш файл и видит не имя файла, когда метатеги не заполнены, а нормальное отображение заголовка вашего файла.
				p Как это выглядит на примере, если метатеги не заполнены.
				p.text-center
					a(href="images/0001.png" target="_blank" data-fancybox="metatags")
						img(src="images/0001-400.png" alt="Пример просмотра PDF файла с незаполненными метатегами")
				p И как это выглядит на примере, если метатеги заполнены.
				p.text-center
					a(href="images/0002.png" target="_blank" data-fancybox="metatags")
						img(src="images/0002-400.png" alt="Пример просмотра PDF файла с заполненными метатегами")
				p Как видно посетитель видит реальный заголовок файла, который он просматривает, что очень удобно.
				blockquote
					p
						|На одной конференции по проверке сайтов гос. учреждений мною был задан вопрос про метатеги... И что меня очень удивило, так это то, что человек, который нам всё объяснял, даже не понял о чём это я и зачем это всё :). А это был человек высокого ранга...
						br
						|Меня очень удивило простое не знание по такому простому вопросу.
				p
					|С версии 2.0.0.0 был полностью изменён подход к запуску диалога настроек программы, а так же отказался от использования модуля compress-images в сторону использования приложения ImageMagick, запуск которого имеется под всеми системами (Windows, Linux, Mac OS, iOS). Соответственно уменшилось и количество устанавливаемых файлов для запуска приложения.
				p
					|Для меня было важно составить PDF файлы каждодневного меню питания и примерного двухнедельного меню питания.
				h2
					|Параметры сканирования:
				table
					thead
						tr
							th
								|Наименование
							th
								|Значение
					tbody
						tr
							td Цветовой формат
							td Цветное
						tr
							td Тип файла
							td JPG (Файл "JPG")
						tr
							td Разрешение (DPI)
							td 300
				h3
					|Формат данных в JSON
				p
					|Каждодневное меню одного файла включает в себя два файла изображений. Двухнедельное состоит из одиннадцати файлов изображений. Править можно под себя.
					br
					|Файл для правки 
					a(href="https://github.com/ProjectSoft-STUDIONIONS/scan-images-menu2pdf/blob/main/menu.json?raw=true" target="_blank") menu.json.
				p
					|Согласно JSON данных можно добавить ещё типы меню не правя код самого модуля, а правя только код файла menu.json. Внимательно следите за форматом JSON файла!!!
				h3
					|Установка
				p
					|Обязательная установка  
					a(href="https://nodejs.org/en/download/prebuilt-installer" target="_blank") Node.js
				p.text-center
					a(href="images/nodejs.png" target="_blank" data-fancybox="nodejs")
						img(src="images/nodejs-400.png" alt="Окно установки Node.js")
				p
					|Подключена обработка отсканированных изображений (ресайз) с помощью  
					a(href="https://imagemagick.org/script/download.php#windows" target="_blank") ImageMagick
					|  (скачать и установить от имени Администратора, проверить запуск magick, convert)
				p
					|Обязательные опции при установке ImageMagick:
				p.text-center
					a(href="images/imagemagick.png" target="_blank" data-fancybox="imagemagick")
						img(src="images/imagemagick-400.png" alt="Окно установки ImageMagick")
				p
					|После установки проверить запуск node, imagemagick, convert
				p.text-center
					a(href="images/runing.png" target="_blank" data-fancybox="runing")
						img(src="images/runing-400.png" alt="Запуск node, imagemagick, convert")

				p &nbsp;
				p &nbsp;
				p &nbsp;
		footer
			.wrapper
				span.copyright
					|Copyright &copy; 
					= copyright
				span.developer
					|Developed by:  
					a(href="https://github.com/" + userName + "/" target="_blank")= nickname
		include inc/yandex.pug
		script(src="https://" + repo + "/js/plugins.js?hash=" + hash type="text/javascript")
		script(src="https://" + repo + "/" + page + "/js/main.js?hash=" + hash type="text/javascript")